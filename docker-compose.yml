version: '3.8'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    platform: linux/amd64
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    platform: linux/amd64
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  airflow-webserver:
    image: apache/airflow:2.7.2
    depends_on:
      - postgres
      - airflow-init
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
     #AIRFLOW__CORE__FERNET_KEY: ''
      #AIRFLOW__WEBSERVER__SECRET_KEY: ''
    volumes:
      - ./airflow:/opt/airflow
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.7.2
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      #AIRFLOW__CORE__FERNET_KEY: 'your_fernet_key_here'
    volumes:
      - ./airflow:/opt/airflow
    command: scheduler

  airflow-init:
    image: apache/airflow:2.7.2
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      # AIRFLOW__CORE__FERNET_KEY: 'your_fernet_key_here'
    volumes:
      - ./airflow:/opt/airflow
    entrypoint: >
      bash -c "
        airflow db migrate &&
        airflow users create --username admin --firstname Airflow --lastname Admin --role Admin --email admin@example.com --password admin
      "

  dbt:
    build:
      context: .
      dockerfile: Dockerfile.dbt
    volumes:
      - ./dbt:/usr/app/dbt
      - ./dbt/profiles/profiles.yml:/root/.dbt/profiles.yml
    working_dir: /usr/app/dbt
    entrypoint: ["sleep", "infinity"]

  api-producer:
    build:
      context: .
      dockerfile: Dockerfile.api
    volumes:
      - ./kafka:/app/kafka
    working_dir: /app/kafka/producers
    entrypoint: ["python", "api_producer.py"]

volumes:
  postgres_data:
