name: dbt CI

on:
  pull_request:
    branches: [ main ]

jobs:
  dbt-test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: dbt  # adjust if your dbt project is elsewhere

    env:
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
      SNOWFLAKE_ROLE: "USER_DBT_ROLE"
      SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}_${{ github.event.number }}
      SNOWFLAKE_CI_USER: ${{ secrets.SNOWFLAKE_CI_USER }}
      SNOWFLAKE_CI_USER_PRIVATE_KEY: ${{ secrets.SNOWFLAKE_CI_USER_PRIVATE_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dbt & sqlfluff
        run: |
          pip install dbt-core dbt-snowflake sqlfluff
          pip install sqlfluff-templater-dbt
          dbt deps

      - name: Set up dbt profile
        run: |
          mkdir -p ~/.dbt
          cat > ~/.dbt/profiles.yml <<EOF
        dbt_weather:
          target: ci
          outputs:
            ci:
              type: snowflake
              account: $SNOWFLAKE_ACCOUNT
              user: $SNOWFLAKE_CI_USER
              private_key: $SNOWFLAKE_CI_USER_PRIVATE_KEY
              role: $SNOWFLAKE_ROLE
              database: $SNOWFLAKE_DATABASE
              warehouse: $SNOWFLAKE_WAREHOUSE
              schema: $SNOWFLAKE_SCHEMA
              threads: 4
              client_session_keep_alive: false

      - name: Lint SQL files with sqlfluff
        run: sqlfluff lint models --dialect snowflake

      - name: Run dbt build
        run: dbt build --target ci
